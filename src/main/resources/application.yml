##共同的,不随着环境变量改变而动态变化的值,放到这个文件里面
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'

server:
  port: 8080

spring:
  application:
    name: zyfboot
  datasource:
    druid:
      type: com.alibaba.druid.pool.DruidDataSource
      url: jdbc:mysql://10.1.10.55:3306/member?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai
      username: member
      password: 67427dAY97Kp
      driver-class-name: com.mysql.cj.jdbc.Driver
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 6000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 20000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,防止sql注入
      #spring.datasource.druid.filters=stat,wall,log4j
      logSlowSql: true
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 172.18.8.205
    # Redis服务器连接端口
    port: 6384
    # Redis服务器连接密码（默认为空）
    #spring.redis.password=2
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 200
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 10
      # 连接池中的最小空闲连接
      min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 1000MS
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 100MB
      resolve-lazily: false

default:
  alert:
    receive:
      appcode: default-alert-receiver

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.mfw.alertconfig.dao
  configuration:
    map-underscore-to-camel-case: true

logging:
  config:
    classpath: logback-spring.xml

# redis 配置
##########################################################################
#
#   日志配置
#
#########################################################################
#logging.pattern.console=%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %msg%n
#logging.pattern.file=%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %msg%n
#logging.file=d:/log/redis-distributed-lock-demo-spring/console.log
#logging.level.com.gaoyang=DEBUG
########################################################################
#
#     redisson单机配置
#
#########################################################################
#redisson.lock.server.address=127.0.0.1:6379
#redisson.lock.server.type=standalone
#redisson.lock.server.password=
#redisson.lock.server.database=1
########################################################################
#
#     redisson哨兵配置
#     **redisson.lock.server.address** 格式为: sentinel.conf配置里的sentinel别名,
#     sentinel1节点的服务IP和端口，sentinel2节点的服务IP和端口，sentinel3节点的服务IP和端口
#
#     比如sentinel.conf里配置为sentinel monitor my-sentinel-name 127.0.0.1 6379 2,那么这里就配置my-sentinel-name
#
#########################################################################
redisson:
  lock:
    server:
      address: Sentinel4dev,10.1.10.101:26379,10.1.10.102:26379,10.1.10.103:26379
      type: sentinel
      password: M0xH5kL01SPH
      database: 1
########################################################################
#
#     redisson分布式锁配置--集群方式
#     cluster方式至少6个节点(3主3从，3主做sharding，3从用来保证主宕机后可以高可用)
#     地址格式为: 127.0.0.1:6379,127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384
#########################################################################
#redisson.server.address=127.0.0.1:6379,127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384
#redisson.server.type=cluster
#redisson.lock.server.password=
########################################################################
#
#     redisson分布式锁配置--主从
#     地址格式为**主节点,子节点,子节点**
#     代表主节点:127.0.0.1:6379，从节点127.0.0.1:6380，127.0.0.1:6381

#########################################################################
#redisson.server.address=127.0.0.1:6379,127.0.0.1:6380,127.0.0.1:6381
#redisson.server.type=masterslave
#redisson.lock.server.password=
#redisson.lock.server.database=1